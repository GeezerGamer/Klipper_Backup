#This is an example configuration file, for the Ender Switchwire Conversion with the SKR E3 mini V2.

[include mainsail.cfg]
#[include stealthburner_leds.cfg]
[include sb_led_macro.cfg]
[include mainsail.cfg]
[include Adaptive_Mesh.cfg]
#[include Voron_Purge.cfg]
#[include Line_Purge.cfg]
#[include can.cfg]

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_2F00570005504B5735313920-if00
#restart_method: command

[mcu EBBCan]
# serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_270032001150425539393020-if00
canbus_uuid=0ba3fab89e3f

[temperature_sensor MCU]
sensor_type: temperature_mcu

[temperature_sensor PI]
sensor_type: temperature_host

[temperature_sensor EBB_NTC]
sensor_type: Generic 3950
sensor_pin: EBBCan:PA2

[adxl345]
cs_pin: EBBCan:PB12
spi_software_sclk_pin: EBBCan:PB10
spi_software_mosi_pin: EBBCan:PB11
spi_software_miso_pin: EBBCan:PB2
axes_map: z,-y,x

[resonance_tester]
probe_points: 100, 100, 20
accel_chip: adxl345

[virtual_sdcard]
path: ~/printer_data/gcodes
[display_status]
[pause_resume]   

[input_shaper]
#shaper_freq_x: 52
#shaper_type_x: mzv
shaper_freq_y: 34.6
shaper_type_y: mzv

[printer]
kinematics: corexz
max_velocity: 200
max_accel: 10300
max_accel_to_decel: 1500
max_z_velocity: 50
max_z_accel: 1500
square_corner_velocity: 4.0

[stepper_x]
step_pin: PB13
dir_pin: PB12
enable_pin: !PB14
rotation_distance: 40
microsteps: 16
endstop_pin:^!EBBCan:PB6
position_endstop: 220
position_min: 0
position_max: 220
homing_speed: 40
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 0.5
interpolate: False
#stealthchop_threshold: 250

[stepper_y]
step_pin: PB10
dir_pin: PB2
enable_pin: !PB11
rotation_distance: 40
microsteps: 16
endstop_pin: ^PC1
position_endstop: 0
position_min: 0
position_max: 220
homing_speed: 40
homing_positive_dir: false

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 0.8
interpolate: False
#stealthchop_threshold: 250

[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
microsteps: 16
rotation_distance: 40
endstop_pin: probe:z_virtual_endstop
position_max: 220
homing_speed: 20
position_min: -5.0

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 0.5
interpolate: False
#stealthchop_threshold: 250

[homing_override]
axes: z
set_position_z: 0
gcode:
    G90
    G0 Z5 F500
    G28 X0 Y0
    G0 X110 Y110 F9000
    G28 Z0
    G0 Z5 F500

[bed_mesh]
speed: 40
horizontal_move_z: 6
mesh_min: 25,35.0
mesh_max: 220.0,220
probe_count: 6,6
algorithm: bicubic
fade_start: 1
fade_end: 10
fade_target: 0

[probe]
pin: ^!EBBCan:PB5
x_offset: 0.0
y_offset: 0.0
#z_offset: 0
speed: 20
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

    

[exclude_object]

[extruder]
step_pin: EBBCan:PD0
dir_pin: !EBBCan:PD1
enable_pin: !EBBCan:PD2
microsteps: 16
rotation_distance: 22.79
full_steps_per_rotation: 200
gear_ratio: 50:10
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan:PB13
sensor_type: Generic 3950
sensor_pin: EBBCan:PA3
pullup_resistor: 4700
pressure_advance: 0.055
pressure_advance_smooth_time: 0.040
#control: pid
#pid_Kp: 33.482
#pid_Ki: 3.543
#pid_Kd: 79.101
min_temp: 0
max_temp: 300

[verify_heater extruder]
max_error: 200 #120

[tmc2209 extruder]
uart_pin: EBBCan:PA15
run_current: 0.6
interpolate: False

# [controller_fan my_controller_fan]
# pin: PC7
# max_power: 1.00
# kick_start_time: 0.200
# heater: heater_bed

[heater_bed]
heater_pin: PC9
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
#control = pid
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 130

[fan]
pin: EBBCan:PA1

[heater_fan hotend_fan]
pin: EBBCan:PA0
heater: extruder
heater_temp: 50.0
fan_speed: 1.0

#[moonraker]
#trusted_clients:
#    192.168.1.0/24

#[gcode_macro lights_on]
#gcode:
    #SET_PIN PIN=LIGHTS VALUE=1.0

#[gcode_macro lights_off]
#gcode:
    #SET_PIN PIN=LIGHTS VALUE=0.0
	
[neopixel sb_leds]
pin: EBBCan:PD3
#   The pin connected to the neopixel. This parameter must be provided.
chain_count: 3
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
color_order: GRB
#   Set the pixel order required by the LED hardware. Options are GRB,
#   RGB, GRBW, or RGBW. The default is GRB.
initial_RED: 1.0
initial_GREEN: 0.52
initial_BLUE: 0.0
initial_WHITE: 0.0
#   Sets the initial LED color of the Neopixel. Each value should be
#   between 0.0 and 1.0. The WHITE option is only available on RGBW
#   LEDs. The default for each color is 0.#

# Most configuration for the macros can be done by modifying the variables in the _sb_vars macro
# at the start of this file.	

#[pause_resume]

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  G1 X100 Y100 Z150

[gcode_macro DISABLE_MOTORS]
gcode:
    M18

[gcode_macro ZUP]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.01 MOVE=1

[gcode_macro ZDOWN]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=-0.01 MOVE=1

[gcode_macro LOAD_FILAMENT]
gcode:
 M83                   # Put the extruder into relative mode
 G92 E0.0              # Reset the extruder so that it thinks it is at position zero
 G1 E50 F350          # Move the extruder forward 120mm at a speed of 350mm/minute
 G92 E0.0              # Reset the extruder again
 M82                   # Put the extruder back into absolute mode.

[gcode_macro UNLOAD_FILAMENT]
gcode:
 M83                   # Put the extruder into relative mode
 G92 E0.0              # Reset the extruder so that it thinks it is at position zero
 G1 E-50 F350          # Move the extruder forward 120mm at a speed of 350mm/minute
 G92 E0.0              # Reset the extruder again
 M82                   # Put the extruder back into absolute mode.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 40.926
#*# pid_ki = 16.050
#*# pid_kd = 26.090
#*#
#*# [probe]
#*# z_offset = -0.850
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 69.770
#*# pid_ki = 1.278
#*# pid_kd = 952.360
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.325000, 0.300000, 0.325000, 0.387500, 0.437500, 0.487500
#*# 	  0.175000, 0.150000, 0.137500, 0.225000, 0.225000, 0.325000
#*# 	  0.062500, -0.012500, 0.037500, 0.075000, 0.087500, 0.150000
#*# 	  -0.050000, -0.125000, -0.137500, -0.087500, -0.062500, -0.012500
#*# 	  -0.150000, -0.212500, -0.262500, -0.187500, -0.212500, -0.175000
#*# 	  -0.237500, -0.325000, -0.387500, -0.400000, -0.412500, -0.387500
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 25.0
#*# max_x = 220.0
#*# min_y = 35.0
#*# max_y = 220.0
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 43.0

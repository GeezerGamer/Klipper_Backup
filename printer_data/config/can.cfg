# This file contains common pin mappings for the BIGTREETECH EBBCan
# Canbus board. To use this config, the firmware should be compiled for the
# RP2040 with "USB" or "CAN bus (on gpio4/gpio5)".
# The "EBB Can" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.

[mcu EBBCan]
#serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_31FFD9055255393027751851-if00
canbus_uuid=0ba3fab89e3f

[temperature_sensor EBB_NTC]
sensor_type: Generic 3950
sensor_pin: EBBCan:PA2

[adxl345]
cs_pin: EBBCan:PB12
spi_software_sclk_pin: EBBCan:PB10
spi_software_mosi_pin: EBBCan:PB11
spi_software_miso_pin: EBBCan:PB2
axes_map: z,-y,x

[resonance_tester]
probe_points: 100, 100, 20
accel_chip: adxl345

[stepper_x]
endstop_pin:^!EBBCan:PB6

[extruder]
step_pin: EBBCan:PD0
dir_pin: !EBBCan:PD1
enable_pin: !EBBCan:PD2
microsteps: 16
rotation_distance: 47.088
full_steps_per_rotation: 200
gear_ratio: 9:1
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan:PB13
sensor_type: Generic 3950
sensor_pin: EBBCan:PA3
pullup_resistor: 4700
pressure_advance: 0.055
pressure_advance_smooth_time: 0.040
control: pid
pid_Kp: 33.482
pid_Ki: 3.543
pid_Kd: 79.101
min_temp: 0
max_temp: 300

# [extruder]
# max_extrude_only_distance: 100.0
# step_pin: PB3
# dir_pin: PB4
# enable_pin: !PD2
# microsteps: 16
# rotation_distance: 47.088
# full_steps_per_rotation: 200
# gear_ratio: 9:1
# nozzle_diameter: 0.400
# filament_diameter: 1.750
# heater_pin: PC8
#pressure_advance: 0.074
# pressure_advance_smooth_time: 0.040
# sensor_type: Generic 3950
# pullup_resistor: 4700
# sensor_pin: PA0
# #control = pid
# #pid_Kp: 21.527
# #pid_Ki: 1.063
# #pid_Kd: 108.982
# min_temp: 0
# max_temp: 270
# max_extrude_cross_section: 5
# sensor_type: MAX31865
# sensor_pin: EBBCan:gpio9
# spi_software_sclk_pin: EBBCan:gpio10
# spi_software_mosi_pin: EBBCan:gpio8
# spi_software_miso_pin: EBBCan:gpio11
# rtd_nominal_r: 100
# rtd_reference_r: 430
# rtd_num_of_wires: 2

[tmc2209 extruder]
uart_pin: EBBCan:PA15
#tx_pin: PC10
run_current: 0.6
interpolate: False
#stealthchop_threshold: 999999
# [tmc2209 extruder]
# uart_pin: PC11
# tx_pin: PC10
# uart_address: 3
# run_current: 0.6
# interpolate: False

[fan]
pin: EBBCan:PA1

[heater_fan hotend_fan]
pin: EBBCan:PA0
heater: extruder
heater_temp: 50.0
fan_speed: 1.0

# [fan_generic 4W_FAN0]
# pin: EBBCan:gpio15
# tachometer_pin: EBBCan:gpio12
# #tachometer_ppr: 1

[neopixel sb_leds]
pin: EBBCan:PD3
#   The pin connected to the neopixel. This parameter must be provided.
chain_count: 3
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
color_order: GRB
#   Set the pixel order required by the LED hardware. Options are GRB,
#   RGB, GRBW, or RGBW. The default is GRB.
initial_RED: 1.0
initial_GREEN: 0.52
initial_BLUE: 0.0
initial_WHITE: 0.0
#   Sets the initial LED color of the Neopixel. Each value should be
#   between 0.0 and 1.0. The WHITE option is only available on RGBW
#   LEDs. The default for each color is 0.#

# Most configuration for the macros can be done by modifying the variables in the _sb_vars macro
# at the start of this file.

[probe]
pin: ^!EBBCan:PB5
x_offset: 0.0
y_offset: 0.0
#z_offset: 0
speed: 20
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}


